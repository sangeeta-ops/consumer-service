server.port=${PORT:9004}
#spring.kafka.producer.bootstrap-servers=localhost:9092
#spring.kafka.producer.bootstrap.key-serializer= org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.bootstrap.value-serializer: org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.topic=first_topic

spring.datasource.driverClassName: com.mysql.jdbc.Driver
spring.datasource.url: jdbc:mysql://localhost:3306/consumer-service-data
spring.datasource.username: root
spring.datasource.password: root

spring.jpa.hibernate.ddl-auto: update
spring.jpa.generate-ddl: true
spring.jpa.show-sql: true

spring.kafka.bootstrap-servers=tricycle-01.srvs.cloudkafka.com:9094,tricycle-02.srvs.cloudkafka.com:9094,tricycle-03.srvs.cloudkafka.com:9094
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="j2fft6jv" password="qDxwWd1vo6FH02vvoiEZ2kaK7iRSBeg-";
cloudkarafka.topic=j2fft6jv-cloud_kafka
spring.kafka.consumer.key-serializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-serializer: org.springframework.kafka.support.serializer.StringDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.prokarma.consumer.service
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.group-id=j2fft6jv-consumers
